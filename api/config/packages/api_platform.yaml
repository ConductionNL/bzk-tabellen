parameters:
    # Adds a fallback VARNISH_URL if the env var is not set.
    # This allows you to run cache:warmup even if your
    # environment variables are not available yet.
    # You should not need to change this value.
    env(VARNISH_URL): ''
    env(APP_VERSION): ''
    env(APP_TITLE): ''
    env(APP_DESCRIPTION): ''
    env(APP_REPRO): ''
    env(APP_DEMO): ''
    env(CONTAINER_PROJECT_NAME): ''

api_platform:
    mapping:
        paths: ['%kernel.project_dir%/src/Entity']

    # The basic API data
    title: '%env(APP_TITLE)%'
    description: |
        %env(APP_DESCRIPTION)% 
        
        Het Tabellen component voorziet in een implementatie strategie voor applicaties  die afhankelijk zijn van gegevens die op dit moment nog niet op commonground beschikbaar of nog niet op de manier waarop we deze beschikbaar willen hebben. Voorbeelden hiervan zijn de [RVIG Landelijke tabellen]( https://publicaties.rvig.nl/Landelijke_tabellen) en een Koppeltabel voor gemeente codes naar RSIN. 

        Het component bied hierbij de mogelijkheid om deze bronnen te benaderen en gebruiken als REST API (dus bijvoorbeeld de gemeentelijst te doorzoeken) conform de NL API strategie. Terug gegeven bronnen zijn voorzien van een URI endpoint waardoor deze gebruikt kunnen worden als bron. 

        Hierbij is het nadrukkelijk mogelijk dat deze bronnen in de toekomst binnen dit component komen te vervallen doordat  zij zichzelf ontsluiten. In dat geval zal de URI dor middel van een 301 redirect  worden doorverwezen naar de nieuwe bron. Hierdoor word continuiteit van verwijzingen geborgd.

        Uiteindelijk faciliteert het component hiermee een methode om blokerende externe dependencies terug te brengen. Door deze als het waren commonground op te trekken als koppeltabel. Hiermee is het mogelijk om implementaties inktvlek gewijs uit te voeren waarbij component voor component word overgetrokken terwijl een eventuele applicatie reeds in productie is.
             
    version: '%env(APP_VERSION)%'  
    
    # Lets configure the api platform bundle to display the docs in confrmation with common ground standards 
    show_webby: false
    enable_swagger_ui: false
    enable_re_doc: true
    
    # In the NL api strategie we use snake case for naming
    name_converter: 'Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter'
    
    # Lets confirm to JSON-HA: first, as per common ground. But allow other serializers
    formats:
        jsonhal:  ['application/hal+json']
        jsonld:   ['application/ld+json']
        jsonapi:  ['application/vnd.api+json']
        json:     ['application/json']
        xml:      ['application/xml']
        yaml:     ['application/x-yaml']
        csv:      ['text/csv']
        html:     ['text/html']
    
    # Varnish integration, remove if unwanted
    http_cache:
        invalidation:
            enabled: true
            varnish_urls: ['%env(VARNISH_URL)%']
        max_age: 0
        shared_max_age: 3600
        vary: ['Content-Type', 'Authorization']
        public: true
        
    # Mercure integration, remove if unwanted
    mercure:
        hub_url: '%env(MERCURE_SUBSCRIBE_URL)%'
        
    # aditional swagger information 
    swagger:
         api_keys:
             apiKey:
                name: Authorization
                type: header
